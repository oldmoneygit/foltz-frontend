================================================================================
                    ÍNDICE DE SCRIPTS - FOLTZ FANWEAR
                Sistema de Análise de Produtos com Claude API
================================================================================

📅 Criado em: 24/10/2024
✅ Status: Pronto para uso
🔧 Problema resolvido: API Error 400 (dimensões de imagem)

================================================================================
                           🚀 COMEÇAR AQUI
================================================================================

1. LEIA PRIMEIRO: QUICK_START.md
   └─ Guia de 30 segundos para começar

2. EXECUTE: python run_all_analysis.py
   └─ Roda tudo automaticamente

3. VEJA RESULTADOS: analise_produtos_completa.txt
   └─ Todas as análises consolidadas

================================================================================
                        📦 SCRIPTS DISPONÍVEIS
================================================================================

🎯 SCRIPT MASTER (Execute este!)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  run_all_analysis.py
  └─ Executa todos os scripts automaticamente
  └─ Comando: python run_all_analysis.py
  └─ Tempo: 10-30 minutos
  └─ Gera: Todos os arquivos de saída

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔍 SCRIPTS DE ANÁLISE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. analyze_products_complete.py ⭐ RECOMENDADO
   ├─ Análise SUPER DETALHADA de produtos
   ├─ Processamento em lotes
   ├─ Configurável (10 img/lote, 50 total)
   ├─ Comando: python analyze_products_complete.py
   └─ Gera:
      ├─ analise_lote_1_YYYYMMDD_HHMMSS.txt
      ├─ analise_lote_2_YYYYMMDD_HHMMSS.txt
      └─ analise_produtos_completa.txt (consolidado)

   📋 CONTEÚDO GERADO:
   ├─ Identificação (time, liga, temporada)
   ├─ Descrição visual completa
   ├─ Nome e descrição para e-commerce
   ├─ Categorias e tags SEO
   ├─ Preço sugerido com justificativa
   └─ Produtos relacionados

2. analyze_products.py
   ├─ Análise rápida (versão simplificada)
   ├─ 5 imagens por vez
   ├─ Comando: python analyze_products.py
   └─ Gera: analise_produtos.txt

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎨 SCRIPTS UTILITÁRIOS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

3. extract_colors.py
   ├─ Extrai cores dominantes de cada imagem
   ├─ Não usa API (processamento local)
   ├─ Rápido e gratuito
   ├─ Comando: python extract_colors.py
   └─ Gera: cores_dominantes.json

   📋 CONTEÚDO JSON:
   ├─ RGB de cada cor
   ├─ HEX de cada cor
   ├─ Nome da cor (Vermelho, Azul, etc)
   └─ Porcentagem na imagem

4. generate_seo_content.py
   ├─ Gera conteúdo SEO otimizado
   ├─ 5 imagens por vez
   ├─ Comando: python generate_seo_content.py
   └─ Gera: conteudo_seo_YYYYMMDD_HHMMSS.txt

   📋 CONTEÚDO GERADO:
   ├─ Title tags e meta descriptions
   ├─ URL slugs otimizados
   ├─ Palavras-chave (principal, secundárias, long-tail)
   ├─ Texto SEO (300-500 palavras)
   ├─ Schema markup JSON-LD
   └─ Alt texts para imagens

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 SCRIPTS DE DIAGNÓSTICO
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

5. test_image_dimensions.py
   ├─ Verifica dimensões de todas as imagens
   ├─ Mostra quais precisam redimensionamento
   ├─ Não modifica nada
   └─ Comando: python test_image_dimensions.py

6. process_images_claude.py
   ├─ Versão interativa (pede confirmação)
   ├─ Útil para testes
   └─ Comando: python process_images_claude.py

================================================================================
                        📖 DOCUMENTAÇÃO
================================================================================

📘 Iniciante
  └─ QUICK_START.md          ← Comece aqui (30 segundos)

📗 Intermediário
  └─ README_SCRIPTS.md       ← Visão geral dos scripts

📙 Avançado
  ├─ GUIA_DE_USO.md         ← Guia completo e detalhado
  └─ IMAGE_PROCESSING_README.md  ← Detalhes técnicos

📕 Projeto
  └─ README.md              ← Sobre o projeto Foltz

================================================================================
                        📊 ARQUIVOS GERADOS
================================================================================

Após executar os scripts, você terá:

📁 ANÁLISES DE PRODUTOS
  ├─ analise_produtos_completa.txt       ← TUDO consolidado aqui
  ├─ analise_lote_1_YYYYMMDD_HHMMSS.txt ← Lote 1
  ├─ analise_lote_2_YYYYMMDD_HHMMSS.txt ← Lote 2
  └─ ...

📁 CORES
  └─ cores_dominantes.json               ← RGB, HEX, % de todas imagens

📁 SEO
  └─ conteudo_seo_YYYYMMDD_HHMMSS.txt   ← Keywords, meta tags, etc

================================================================================
                        ⚙️ CONFIGURAÇÃO
================================================================================

✅ API Key: Já configurada em .env
✅ Dependências: Já instaladas
✅ Scripts: Prontos para uso

Para personalizar:

1. Edite analyze_products_complete.py (linhas 19-21):
   IMAGES_PER_BATCH = 10    # Quantas imagens por lote
   TOTAL_IMAGES = 50        # Total a processar (None = todas)

2. Edite IMAGE_FOLDERS (linha 17):
   IMAGE_FOLDERS = ["seedream", "id_visual"]  # Adicionar mais pastas

================================================================================
                        💰 CUSTOS ESTIMADOS
================================================================================

Script                  | Imagens | Modelo  | Custo Aproximado
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
extract_colors.py       | Todas   | Local   | R$ 0 (grátis)
generate_seo_content.py | 5       | Haiku   | R$ 0.50
analyze_products.py     | 5       | Haiku   | R$ 0.50
analyze_complete (10)   | 10      | Haiku   | R$ 2-5
analyze_complete (50)   | 50      | Haiku   | R$ 10-20
analyze_complete (121)  | 121     | Haiku   | R$ 25-40
run_all_analysis        | 50      | Haiku   | R$ 15-25

💡 DICA: Use Haiku para volumes grandes, Opus para qualidade máxima

================================================================================
                        🎯 FLUXO RECOMENDADO
================================================================================

PRIMEIRA VEZ (Teste):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Edite analyze_products_complete.py
   └─ TOTAL_IMAGES = 5

2. Execute:
   python analyze_products_complete.py

3. Verifique resultado:
   notepad analise_lote_1_*.txt

4. Se bom, continue para produção

PRODUÇÃO (Análise Completa):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Execute tudo:
   python run_all_analysis.py

2. Aguarde 10-30 minutos

3. Use os arquivos gerados:
   ├─ cores_dominantes.json → Sistema de cores do site
   ├─ conteudo_seo_*.txt → Páginas de produto
   └─ analise_produtos_completa.txt → Descrições e categorias

================================================================================
                        🐛 SOLUÇÃO DE PROBLEMAS
================================================================================

❌ Erro: "API Error 400: dimensions exceed"
   ✅ Solução: Scripts já redimensionam automaticamente!

❌ Erro: "ANTHROPIC_API_KEY não encontrada"
   ✅ Solução: Verificar arquivo .env

❌ Erro: "ModuleNotFoundError"
   ✅ Solução: pip install -r requirements.txt

❌ Script muito lento
   ✅ Solução: Reduzir IMAGES_PER_BATCH para 5

❌ Análise de baixa qualidade
   ✅ Solução: Usar modelo "opus" em vez de "haiku"

================================================================================
                        ✅ CHECKLIST FINAL
================================================================================

Antes de executar, verifique:

 ✅ Dependências instaladas (pip install -r requirements.txt)
 ✅ API Key configurada (.env existe)
 ✅ Imagens nas pastas (seedream/ e id_visual/)
 ✅ Espaço em disco disponível (arquivos txt podem ser grandes)

================================================================================
                        🎉 PRONTO PARA USAR!
================================================================================

Execute agora:

   python run_all_analysis.py

Ou comece pequeno:

   python analyze_products.py

Boa sorte! ⚽🏆

================================================================================
Criado por: Claude AI
Data: 24/10/2024
Versão: 1.0.0
================================================================================
