{%- capture product_form_id -%}product-form-{{ product.id }}-{{ section.id }}{%- endcapture -%}
<safe-sticky class="product-info">
   {%- for block in section.blocks -%}
   {%- assign previous_block_index = forloop.index0 | minus: 1 -%}
   {%- assign previous_block = section.blocks[previous_block_index] -%}
   {%- assign next_block = section.blocks[forloop.index] -%}
   {%- case block.type -%}
   {%- when '@app' -%}
   {%- render block -%}
   {%- when 'vendor' -%}
   {%- if product.vendor != blank -%}
   <div class="product-info__vendor" {{ block.shopify_attributes }}>
   {%- render 'vendor' with product.vendor -%}
   </div>
   {%- endif -%}
   {%- when 'title' -%}
   {%- if request.page_type == 'product' -%}
   <h1 class="product-info__title {{ block.settings.heading_tag }}" {{ block.shopify_attributes }}>
   {{ product.title }}
   </h1>
   {%- else -%}
   <h2 class="product-info__title {{ block.settings.heading_tag }}" {{ block.shopify_attributes }}>
   <a href="{{ product.url }}">{{ product.title }}</a>
   </h2>
   {%- endif -%}
   {%- when 'badges' -%}
   {%- render 'product-badges',
   product: product,
   types: 'custom',
   form_id: product_form_id,
   class: 'product-info__badge-list',
   block: block
   -%}
     {% when 'simulator-shipping' %}
            {% render 'calculo-frete', block: block %}
   {%- when 'sku' -%}
   <variant-sku
   form="{{ product_form_id }}"
   class="product-info__sku text-xs text-subdued"
   {% if product.selected_or_first_available_variant.sku == blank %}
   hidden
   {% endif %}
   {{ block.shopify_attributes }}
   >
   {{- 'product.general.sku' | t }}
   {{ product.selected_or_first_available_variant.sku -}}
   </variant-sku>
   {%- when 'price' -%}
   <div class="product-info__price">
      <div class="rating-with-text">
         {%- render 'price-list',
         variant: product.selected_or_first_available_variant,
         form_id: product_form_id,
         size: 'lg',
         block: block
         -%}
         {%- render 'product-badges',
         types: 'sold_out, discount',
         product: product,
         form_id: product_form_id,
         class: 'product-info__badge-list'
         -%}
         {%- if next_block.type == 'rating' -%}
         {%- render 'product-rating',
         product: product,
         show_empty: next_block.settings.show_empty,
         block: next_block
         -%}
         {%- endif -%}
      </div>
      {%- if section.settings.show_pix_discount -%}
      {% assign vezes = section.settings.percent_pix_discount  %}
      {% assign discount = product.price  | times: vezes | divided_by: 100 %}
      <div class="div_main">
         <div class="product-info__price">
            {%- render 'price-list-2',
            variant: product.selected_or_first_available_variant,
            form_id: product_form_id,
            size: 'lg',
            block: block
            -%}
         </div>
      </div>
      {%- else -%}
      <div class="product-info__price">
         {%- render 'price-list-2',
         variant: product.selected_or_first_available_variant,
         form_id: product_form_id,
         size: 'lg',
         block: block
         -%}
      </div>
      {%- endif -%} 
      {%- when 'payment_terms' -%}
      {% if settings.show_installments %}
      <div class="product-installments">
         {% assign max_installments = settings.modo_parcelamento | default: 12 %}
         {% assign interest_rate = 0 %}
         {% case max_installments %}
         {% when 2 %}
         {% assign interest_rate = settings.taxa_segunda_parcela | divided_by: 100 %}
         {% when 3 %}
         {% assign interest_rate = settings.taxa_terceira_parcela | divided_by: 100 %}
         {% when 4 %}
         {% assign interest_rate = settings.taxa_quarta_parcela | divided_by: 100 %}
         {% when 5 %}
         {% assign interest_rate = settings.taxa_quinta_parcela | divided_by: 100 %}
         {% when 6 %}
         {% assign interest_rate = settings.taxa_sexta_parcela | divided_by: 100 %}
         {% when 7 %}
         {% assign interest_rate = settings.taxa_setima_parcela | divided_by: 100 %}
         {% when 8 %}
         {% assign interest_rate = settings.taxa_oitava_parcela | divided_by: 100 %}
         {% when 9 %}
         {% assign interest_rate = settings.taxa_nona_parcela | divided_by: 100 %}
         {% when 10 %}
         {% assign interest_rate = settings.taxa_decima_parcela | divided_by: 100 %}
         {% when 11 %}
         {% assign interest_rate = settings.taxa_decima_primeira_parcela | divided_by: 100 %}
         {% when 12 %}
         {% assign interest_rate = settings.taxa_decima_segunda_parcela | divided_by: 100 %}
         {% endcase %}
         {% assign total_cost_with_interest = product.price | times: interest_rate | plus: product.price %}
         {% assign installment_price = total_cost_with_interest | divided_by: max_installments %}
 
          <div class="more_payments_bar" {{ block.shopify_attributes }}>
              <p> ou at√© {{ max_installments }}x de R$ {{ installment_price | money_without_currency }}</p>
           </div>
          <span class="more-payments">
                 <button 
                  data-origin="more-payments" 
                  class="relative tap-area more-payments_button"
                  aria-controls="cart-drawer"
                  onclick="openCartDrawer(this);toggleModalOn();">
                   <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" style="width: 18px"><path fill-rule="evenodd" d="M12 3.75a.75.75 0 0 1 .75.75v6.75h6.75a.75.75 0 0 1 0 1.5h-6.75v6.75a.75.75 0 0 1-1.5 0v-6.75H4.5a.75.75 0 0 1 0-1.5h6.75V4.5a.75.75 0 0 1 .75-.75Z" clip-rule="evenodd" /></svg>
                  formas de pagamento
                </button>
              </span>
       
         <div class="product-price">
            <div class="price-promotional-wrap">
               {%- if selected_variant.compare_at_price > selected_variant.price -%}
               <span>{{ selected_variant.compare_at_price | money }}</span>
               {% endif %}
               <div style="align-items: center; display: flex;">
                  <strong>{{ selected_variant.price | money }}</strong>
                  {%- if selected_variant.compare_at_price > selected_variant.price -%}
                  {%- assign savings = selected_variant.compare_at_price
                  | minus: selected_variant.price
                  | times: 100.0
                  | divided_by: selected_variant.compare_at_price
                  | round
                  | append: '%'
                  -%}
                  <div class="product-price-discount"></div>
                  {%- endif -%}
               </div>
            </div>
         </div>
      </div>
      {% endif %}
      {%- if block.settings.show_taxes_notice -%}
      <p class="text-sm text-subdued">
         {%- if cart.taxes_included -%}
         {{ 'product.general.taxes_included' | t }}
         {%- else -%}
         {{ 'product.general.taxes_excluded' | t }}
         {%- endif -%}
         {%- if shop.shipping_policy.body != blank -%}
         {{ 'product.general.shipping_policy_html' | t: link: shop.shipping_policy.url }}
         {%- endif -%}
      </p>
      {%- endif -%}
   </div>
   {%- when 'rating' -%}
   {%- if previous_block.type != 'price' -%}
   <div class="product-info__rating">
      {%- render 'product-rating', product: product, show_empty: block.settings.show_empty, block: block -%}
   </div>
   {%- endif -%}
   {%- when 'separator' -%}
   <hr class="product-info__separator" {{ block.shopify_attributes }}>
   {%- when 'description' -%}
   {%- if block.settings.collapse_content -%}
   {%- if product.description != blank -%}
   {%- capture accordion_title -%}{{ 'product.general.description' | t }}{%- endcapture -%}
   {%- capture accordion_content -%}
   <div class="prose">{{ product.description }}</div>
   {%- endcapture -%}
   {%- render 'accordion',
   title: accordion_title,
   content: accordion_content,
   class: 'product-info__accordion',
   block: block
   -%}
   {%- endif -%}
   {%- else -%}
   {%- if product.description != blank -%}
   <div class="product-info__description" {{ block.shopify_attributes }}>
   <div class="prose">
      {{- product.description -}}
   </div>
   </div>
   {%- endif -%}
   {%- endif -%}
   {%- when 'variant_picker' -%}
   <div class="product-info__variant-picker" {{ block.shopify_attributes }}>
   {%- render 'variant-picker',
   product: product,
   form_id: product_form_id,
   update_url: update_url,
   hide_sold_out_variants: block.settings.hide_sold_out_variants,
   block: block
   -%}
   </div>
   {%- when 'product_variations' -%}
   {%- assign contains_product = false -%}
   {%- for product_variation in block.settings.products -%}
   {%- if product_variation == product -%}
   {%- assign contains_product = true -%}
   {%- endif -%}
   {%- endfor -%}
   {%- if contains_product -%}
   <div class="product-info__product-picker" {{ block.shopify_attributes }}>
   <div class="variant-picker">
      <fieldset class="variant-picker__option">
         {%- assign metafield_parts = block.settings.option_value_metafield | split: '.' -%}
         {%- assign metafield_namespace = metafield_parts | first -%}
         {%- assign metafield_key = metafield_parts | last -%}
         {%- if block.settings.option_name != blank -%}
         <div class="variant-picker__option-info">
            <div class="h-stack gap-2">
               <legend class="text-subdued">{{ block.settings.option_name | escape }}:</legend>
               <span>{{ product.metafields[metafield_namespace][metafield_key].value | escape }}</span>
            </div>
         </div>
         {%- endif -%}
         <div class="variant-picker__option-values wrap gap-2">
            {%- for product_variation in block.settings.products -%}
            {%- assign value = product_variation.metafields[metafield_namespace][metafield_key].value -%}
            {%- if product_variation == product -%}
            {%- assign selected = true -%}
            {%- else -%}
            {%- assign selected = false -%}
            {%- endif -%}
            {%- case block.settings.color_mode -%}
            {%- when 'color' -%}
            {%- render 'swatch' with 'color',
            href: product_variation.url,
            value: value,
            selected: selected
            -%}
            {%- when 'variant' -%}
            {%- render 'swatch' with 'media',
            href: product_variation.url,
            value: value,
            media: product_variation.featured_media,
            selected: selected,
            bordered: true
            -%}
            {%- when 'block' -%}
            {%- render 'swatch' with 'block',
            href: product_variation.url,
            value: value,
            selected: selected
            -%}
            {%- when 'block_swatch' -%}
            {%- render 'swatch' with 'block',
            href: product_variation.url,
            value: value,
            selected: selected,
            show_color: true
            -%}
            {%- endcase -%}
            {%- endfor -%}
         </div>
      </fieldset>
   </div>
   </div>
   {%- endif -%}
   {%- when 'line_item_property' -%}
   {%- if block.settings.label != blank -%}
   {%- capture name -%}properties[{{ block.settings.label | escape }}]{%- endcapture -%}
   <div class="product-info__property" {{ block.shopify_attributes }}>
   {%- if block.settings.type == 'text' -%}
   {%- if block.settings.allow_long_text -%}
   {%- render 'input',
   label: block.settings.label,
   name: name,
   form: product_form_id,
   multiline: 4,
   required: block.settings.required,
   maxlength: block.settings.max_length
   -%}
   {%- else -%}
   {%- render 'input',
   type: 'text',
   label: block.settings.label,
   name: name,
   form: product_form_id,
   required: block.settings.required,
   maxlength: block.settings.max_length
   -%}
   {%- endif -%}
   {%- else -%}
   {%- render 'checkbox',
   label: block.settings.label,
   name: name,
   required: block.settings.required,
   form: product_form_id
   -%}
   {%- endif -%}
   </div>
   {%- endif -%}
   {%- when 'inventory' -%}
   <div class="product-info__inventory {{ block.shopify_attributes }}">
      {%- render 'inventory',
      product: product,
      low_threshold: block.settings.low_inventory_threshold,
      form_id: product_form_id
      -%}
   </div>
   {%- when 'buy_buttons' -%}
   <div class="container-buy-quant {{ block.shopify_attributes }}">
      <div class="form-control">
            <quantity-selector class="quantity-selector">
               <button
                  type="button"
                  class="quantity-selector__button"
                  aria-label="{{ 'product.quantity.decrease_quantity' | t }}"
                  >
               {% render 'icon' with 'minus', width: 10, height: 2 %}
               </button>
               <input
                  id="{{ product_form_id }}-quantity"
                  type="text"
                  is="quantity-input"
                  inputmode="numeric"
                  class="quantity-selector__input"
                  name="quantity"
                  form="{{ product_form_id }}"
                  size="3"
                  value="1"
                  autocomplete="off"
                  >
               <button
                  type="button"
                  class="quantity-selector__button" aria-label="{{ 'product.quantity.increase_quantity' | t }}"
                  >
               {% render 'icon' with 'plus', width: 10, height: 10 %}
               </button>
            </quantity-selector>
         </div>
      {%- assign main_form_exists = true -%}
      {%- if request.page_type != 'password' -%}
      <div class="product-info__buy-buttons {% if block.settings.ativar_animacao_btn_compra %}animate_btn_buy{% endif %}" {{ block.shopify_attributes }}>
      {%- render 'buy-buttons',
      product: product,
      form_id: product_form_id,
      show_payment_button: block.settings.show_payment_button,
      atc_button_background: block.settings.atc_button_background,
      atc_button_text_color: block.settings.atc_button_text_color,
      atc_button_text: block.settings.buy_button_text,
      payment_button_background: block.settings.payment_button_background,
      payment_button_text_color: block.settings.payment_button_text_color,
      redirect_to_cart: block.settings.habilitar_1clique
      -%}
   </div>
   {%- endif -%}
   </div>
   {%- capture product_form_id_2 -%}product-form-{{ product.id }}-{{ section.id }}{%- endcapture -%}
   {%- if block.settings.show_checkout_button -%}
   <div style="margin-top: 0px;">
      <buy-buttons form="{{ product_form_id_2 }}">
         {%- render 'button',
         type: 'submit',
         icon: 'shopping_cart_botao',
         content: block.settings.atc_button_text,
         form: product_form_id_2,
         background: block.settings.payment_button_background,
         text_color: block.settings.payment_button_text_color,
         secondary: true,
         stretch: true,
         size: 'lg'
         -%}
      </buy-buttons>
   </div>
   {%- endif -%}
   {% when 'spectators' %}
   <div style="display: flex; flex-direction: row; align-items: center; gap: 6px;">
     <div class="olho" data-color="{{ block.settings.spectator_count_color }}"></div>
     <style>
        .olho {
            background: var(--color);
            border-radius: 50%;
            height: 10px;
            width: 10px;
            box-shadow: 0 0 0 0 rgba(var(--rgb-color), 0.7);
            transform: scale(1);
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% {
                transform: scale(0.95);
                box-shadow: 0 0 0 0 rgba(var(--rgb-color), 0.7);
            }
            70% {
                transform: scale(1);
                box-shadow: 0 0 0 10px rgba(var(--rgb-color), 0);
            }
            100% {
                transform: scale(0.95);
                box-shadow: 0 0 0 0 rgba(var(--rgb-color), 0);
            }
        }
    </style>
   <p><strong><span id="viewer_pro"></span></strong> vendo esse produto agora</p> 

<script>
  function updateViewerCount() {
    const viewerElement = document.getElementById("viewer_pro");
    if (viewerElement) {
      let count = Math.floor(Math.random() * 50) + 1;
      if (count < 10) {
        count += 15;
      }
      viewerElement.textContent = `${count} pessoas`;
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    updateViewerCount();
    setInterval(updateViewerCount, 5000); 
  });
</script>

     
     <script>
      document.addEventListener("DOMContentLoaded", function() {
        const olho = document.querySelector(".olho");
        const hexColor = olho.getAttribute("data-color");
        
        function hexToRgb(hex) {
          const r = parseInt(hex.slice(1, 3), 16);
          const g = parseInt(hex.slice(3, 5), 16);
          const b = parseInt(hex.slice(5, 7), 16);
          return `${r}, ${g}, ${b}`;
        }  
        const rgb = hexToRgb(hexColor);
        olho.style.setProperty('--rgb-color', rgb);
        olho.style.setProperty('--color', hexColor);
      });
    </script>
   </div>
   {%- when 'text' -%}
   {%- if block.settings.text != blank -%}
   <div class="product-info__text" {{ block.shopify_attributes }}>
   <div class="prose">
      {{- block.settings.text -}}
   </div>
   </div>
   {%- endif -%}
   {%- when 'collapsible_text' -%}
   {%- if block.settings.title != blank and block.settings.content != blank -%}
   {%- capture accordion_content -%}
   <div class="prose">{{ block.settings.content }}</div>
   {%- endcapture -%}
   {%- render 'accordion',
   title: block.settings.title,
   content: accordion_content,
   class: 'product-info__accordion',
   block: block
   -%}
   {%- endif -%}
   {%- when 'image' -%}
   {%- if block.settings.image != blank -%}
   <div class="product-info__image" {{ block.shopify_attributes }}>
   {%- capture sizes -%}{{ block.settings.max_width }}px{%- endcapture -%}
   {%- capture widths -%}{{ block.settings.max_width }}, {{ block.settings.max_width | times: 2 | at_most: block.settings.image.width }}{%- endcapture -%}
   {%- capture style -%}width: {{ block.settings.max_width }}px; {% if block.settings.alignment == 'center' %}margin-inline: auto{% elsif block.settings.alignment == 'end' %}margin-inline-start: auto;{% endif %}{%- endcapture -%}
   {{-
   block.settings.image
   | image_url: width: block.settings.image.width
   | image_tag: loading: 'lazy', style: style, sizes: sizes, widths: widths
   -}}
   </div>
   {%- endif -%}
   {%- when 'button' -%}
   {%- if block.settings.text != blank -%}
   <div class="product-info__button" {{ block.shopify_attributes }}>
   {%- render 'button',
   content: block.settings.text,
   href: block.settings.link,
   size: block.settings.size,
   style: block.settings.style,
   stretch: block.settings.stretch,
   background: block.settings.background,
   text_color: block.settings.text_color
   -%}
   </div>
   {%- endif -%}
   {% when 'payment_meths' %}

  <style>
    .payment-list {
      display: flex;
      flex-direction: column;
    }
    
    .payment-list__info {
      background: #8080801a;
      border-radius: calc(var(--rounded-sm) - 4px);
      padding: var(--spacing-2) var(--spacing-4);
      text-align: center;
    }

    .payment-list__items {
      display: flex;
      flex-direction: row;
      justify-content: center;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--spacing-2);
    }

    @media (max-width: 999px){
      .payment-list__items > img {
        width: 40px;
      }
      .payment-list__item {
        width: 40px!important;
        height: 24.95px!important;
      }
    }
    
    .payment-list__item {
      height: 32.5px;
      width: 50px;
      background: white;
      border: 1px solid #eaeaeb;
      border-radius: 4px;
      padding: var(--spacing-1-5);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    .payment-list__img {
      max-height: -webkit-fill-available;
    }
  </style>

    {% if settings.payments_title != blank %}
      <style>
        .payment-list {
          display: flex;
          flex-direction: column;
          padding: var(--spacing-1);
          border: 1px solid #8080801a;
          border-radius: var(--rounded-sm);
        }
        .payment-list__items {
          padding: var(--spacing-2);
        }
      </style>
    {% endif %}
     
   <div {{ block.shopify_attributes }} class="payment-list">
     {% if settings.payments_title != blank %}
     <div class="payment-list__info">
       <p>{{ settings.payments_title }}</p>
     </div>
     {% endif %}
     <div class="payment-list__items">
        {% assign payment_mode = settings.payment_mode %}
        {% if payment_mode == 'external' %}
          {% if settings.payments_visa %}
            <img src="{{ 'visa.svg' | asset_url }}" alt="Visa" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_mastercard %}
            <img src="{{ 'mastercard.svg' | asset_url }}" alt="Mastercard" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_americanexpress %}
            <img src="{{ 'amex.svg' | asset_url }}" alt="American Express" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_dinnersclub %}
            <img src="{{ 'card-3.svg' | asset_url }}" alt="DinnersClub" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_discovery %}
            <img src="{{ 'discover.svg' | asset_url }}" alt="Discover" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_hipercard %}
            <img src="{{ 'hipercard.svg' | asset_url }}" alt="Hipercard" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_elo %}
            <img src="{{ 'elo.svg' | asset_url }}" alt="Elo" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_pix %}
            <img src="{{ 'pix.svg' | asset_url }}" alt="PIX" width="50px" height="32.5px" loading="lazy">
          {% endif %}
          {% if settings.payments_boleto %}
          <div class="payment-list__item">
            <img class="payment-list__img" height="auto" width="auto" alt="Boleto"
              src="https://cdn.shopify.com/s/files/1/0706/7467/7999/files/boleto.webp?v=1734803427">
          </div>
          {% endif %}
          
        {% elsif payment_mode == 'shopify' %}
        {%- for type in shop.enabled_payment_types -%}
          {{- type | payment_type_svg_tag -}}
        {%- endfor -%}
        {% endif %}
     </div>
   </div>
   {% when 'barra_de_escassez' %}  
   <style>
      :root {
        --count-main-color       : {{ block.settings.count_main_color }};
        --count-main-color-rgb   : {{ block.settings.count_main_color | color_extract: 'red' }}, {{ block.settings.count_main_color | color_extract: 'green' }}, {{ block.settings.count_main_color | color_extract: 'blue' }};
        --alt-progress           : {{ block.settings.alt_progress}}px;
        --font-progress          : {{ block.settings.font_progress}}px;
      }          
   </style>
   <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" defer></script>
   <script type = "text/javascript" > 
      function randomIntFromInterval(min, max) {
          return Math.floor(Math.random() * (max - min + 1) + min);
      }
      
      var total_items = 50,
          min_items_left = 19,
          max_items_left = 45,
          remaining_items = randomIntFromInterval(min_items_left, max_items_left),
          min_of_remaining_items = 1,
          decrease_after = 3.7,
          decrease_after_first_item = 0.17;
      
      function myanimate(element, targetWidth) {
          var currentWidth = 0;
          var parentWidth = parseInt(element.closest(".count__bar").css("width"));
          var initialWidth = Math.floor((100 * parseInt(element.css("width"))) / parentWidth);
      
          if (initialWidth > targetWidth) {
              currentWidth = initialWidth;
          }
      
          var interval = setInterval(function () {
              if (initialWidth > targetWidth) {
                  currentWidth--;
              } else {
                  currentWidth++;
              }
      
              element.css("width", currentWidth + "%");
      
              if (currentWidth == targetWidth || currentWidth <= 0 || currentWidth >= 100) {
                  clearInterval(interval);
              }
          }, 50);
      }
      
      (function ($) {
          $.fn.count__bar = function () {
              var count__barHtml = `
                  <div class='count__infos'>
                    <div class='count__icon'>{%- render 'icon' with 'picto-timer' -%}</div>
                    <p>Restam apenas <b>${remaining_items}</b> unidades</p>
                    <small class='count__small'>Baixo estoque!</small>
                  </div>
                  <div class='count__bar'>
                    <div style='width:100%' class='count__bar-progress'></div>
                  </div>
              `;
      
              this.addClass("count__items");
              this.html(count__barHtml + this.html());
              updateProgress(this);
      
              var self = this;
      
              setTimeout(function () {
                  decreaseItems(self);
              }, 60000 * decrease_after_first_item);
      
              setInterval(function () {
                  decreaseItems(self);
              }, 60000 * decrease_after);
          };
      
          function decreaseItems(container) {
              remaining_items--;
      
              if (remaining_items < min_of_remaining_items) {
                  remaining_items = randomIntFromInterval(min_items_left, max_items_left);
              }
      
              $(".count").css({ "background-color": "", color: "" });
              setTimeout(function () {
                  $(".count").css({ "background-color": "", color: "" });
              }, 1800);
      
              container.find(".count").text(remaining_items);
              updateProgress(container);
          }
      
          function updateProgress(container) {
              var progressPercentage = (100 * remaining_items) / total_items;
      
              if (remaining_items < 10) {
                  container.find(".count__bar div:first").addClass("less-than-ten");
              }
      
              container.find(".count__bar").addClass("active progress-striped");
      
              setTimeout(function () {
                  myanimate(container.find(".count__bar div:first"), progressPercentage);
                  container.find(".count__bar").removeClass("active progress-striped");
              }, 1000);
          }
      })(jQuery);
      
      jQuery.noConflict()(function ($) {
          $(document).ready(function () {
              $("#progress_bar").count__bar();
      
              var numDays = $("#numdays"),
                  numHours = $("#numhours"),
                  numMins = $("#nummins"),
                  numSecs = $("#numsecs");
      
              var now = new Date();
              var secondsLeft = 60 - now.getSeconds();
              var minutesLeft = 60 - now.getMinutes();
              var hoursLeft = 14 - now.getHours();
              var daysLeft = 31 - now.getDate();
      
              numSecs.html(secondsLeft);
              numMins.html(minutesLeft);
              numHours.html(hoursLeft);
              numDays.html(daysLeft);
      
              setInterval(function () {
                  var secs = parseInt(numSecs.text());
                  var mins = parseInt(numMins.text());
                  var hours = parseInt(numHours.text());
                  var days = parseInt(numDays.text());
      
                  if (secs === 0 && mins === 0 && hours === 0 && days === 0) {
                      return;
                  }
      
                  if (secs === 0) {
                      if (mins === 0) {
                          if (hours === 0) {
                              numDays.html(days - 1);
                              numHours.html(23);
                              numMins.html(59);
                              numSecs.html(59);
                          } else {
                              numHours.html(hours - 1);
                              numMins.html(59);
                              numSecs.html(59);
                          }
                      } else {
                          numMins.html(mins - 1);
                          numSecs.html(59);
                      }
                  } else {
                      numSecs.html(secs - 1);
                  }
              }, 1000);
          });
      });
   </script> 
   <div class="count__items" id="progress_bar"></div>
   {%- when 'liquid' -%}
   {%- if block.settings.liquid != blank -%}
   <div class="product-info__liquid" {{ block.shopify_attributes }}>
   {{ block.settings.liquid }}
   </div>
   {%- endif -%}
   {%- when 'associated_products' -%}
   <product-recommendations
   class="block"
   product="{{ product.id }}"
   limit="{{ block.settings.products_count }}"
   intent="complementary"
   {{ block.shopify_attributes }}
   >
   {%- if recommendations.performed and recommendations.products_count > 0 -%}
   <div class="product-info__complementary-products v-stack gap-3 sm:gap-4">
      {%- assign carousel_id = 'carousel-' | append: block.id -%}
      {%- if block.settings.title != blank
      or block.settings.stack_products == false
      and recommendations.products_count > 1
      -%}
      <div class="h-stack justify-between gap-4 bold">
         {%- if block.settings.title != blank -%}
         <p>{{ block.settings.title | escape }}</p>
         {%- endif -%}
         {%- if block.settings.stack_products == false and recommendations.products_count > 1 -%}
         <div class="h-stack gap-2 hidden sm:flex">
            <button
               is="prev-button"
               class="circle-chevron hover:colors"
               aria-controls="{{ carousel_id }}"
               aria-label="{{ 'general.accessibility.previous' | t | escape }}"
               disabled
               >
            {%- render 'icon' with 'chevron-left-small', direction_aware: true -%}
            </button>
            <button
               is="next-button"
               class="circle-chevron hover:colors"
               aria-controls="{{ carousel_id }}"
               aria-label="{{ 'general.accessibility.next' | t | escape }}"
               >
            {%- render 'icon' with 'chevron-right-small', direction_aware: true -%}
            </button>
         </div>
         {%- endif -%}
      </div>
      {%- endif -%}
      {%- capture horizontal_products -%}
      {%- for associated_product in recommendations.products -%}
      {%- render 'horizontal-product', product: associated_product, show_add_to_cart: true, background: block.settings.background, text_color: block.settings.text_color -%}
      {%- endfor -%}
      {%- endcapture -%}
      {%- assign horizontal_products_blends = true -%}
      {%- assign section_background = section.settings.background_gradient
      | default: section.settings.background
      | default: settings.background
      -%}
      {%- if block.settings.background != 'rgba(0,0,0,0)'
      and block.settings.background != blank
      and block.settings.background != section_background
      -%}
      {%- assign horizontal_products_blends = false -%}
      {%- endif -%}
      {%- if block.settings.stack_products -%}
      <div class="horizontal-product-list {% if horizontal_products_blends %}border divide-y rounded-sm{% else %}separate{% endif %}">
         {{- horizontal_products -}}
      </div>
      {%- else -%}
      <scroll-carousel
         selector=".horizontal-product"
         id="{{ carousel_id }}"
         class="horizontal-product-list-carousel {% unless horizontal_products_blends %}separate{% endunless %} scroll-area bleed sm:unbleed"
         >
         <div class="horizontal-product-list {% if horizontal_products_blends %}divide-x{% else %}separate{% endif %}">
            {{- horizontal_products -}}
         </div>
      </scroll-carousel>
      {%- endif -%}
   </div>
   {%- endif -%}
   </product-recommendations>
   {%- when 'offer' -%}
   {%- if previous_block.type != 'offer' and next_block.type == 'offer' -%}
   <div class="product-info__offer-list">
      {%- endif -%}
      {%- if block.settings.title != blank or block.settings.content != blank -%}
      {%- render 'offer', block: block -%}
      {%- endif -%}
      {%- if forloop.last or previous_block.type == 'offer' and next_block.type != 'offer' -%}
   </div>
   {%- endif -%}
   {%- when 'share_buttons' -%}
   <div
   class="product-form__share {% if block.settings.alignment == 'center' %}justify-self-center{% elsif block.settings.alignment == 'end' %}justify-self-end{% endif %}"
   {{ block.shopify_attributes }}
   >
   <div class="product-info__share-buttons">
      <div class="share-buttons">
         <span class="text-subdued">{{- 'general.social.share' | t -}}</span>
         <ul class="h-stack" role="list">
            <li>
               <a
                  href="{% render 'share-link', host: 'facebook', title: product.title, description: product.description, url: product.url %}"
                  class="share-buttons__item"
                  aria-label="{{ 'general.social.share_on' | t: social_media: 'Facebook' }}"
                  >
               {%- render 'icon' with 'facebook', width: 20, height: 20 -%}
               </a>
            </li>
            <li>
               <a
                  href="{% render 'share-link', host: 'twitter', title: product.title, description: product.description, url: product.url %}"
                  class="share-buttons__item"
                  aria-label="{{ 'general.social.share_on' | t: social_media: 'Twitter' }}"
                  >
               {%- render 'icon' with 'twitter', width: 20, height: 20 -%}
               </a>
            </li>
            <li>
               <a
                  href="{% render 'share-link', host: 'pinterest', title: product.title, description: product.description, url: product.url %}"
                  class="share-buttons__item"
                  aria-label="{{ 'general.social.share_on' | t: social_media: 'Pinterest' }}"
                  >
               {%- render 'icon' with 'pinterest', width: 20, height: 20 -%}
               </a>
            </li>
            <li>
               <a
                  href="{% render 'share-link', host: 'email', title: product.title, description: product.description, url: product.url %}"
                  class="share-buttons__item"
                  aria-label="{{ 'general.social.share_email' | t }}"
                  >
               {%- render 'icon' with 'email' -%}
               </a>
            </li>
         </ul>
      </div>
   </div>
   <button is="share-button" class="product-info__native-share">
   {%- render 'icon' with 'share' -%}
   {{- 'general.social.share' | t -}}
   </button>
   </div>
   {%- endcase -%}
   {%- endfor -%}
   {%- unless main_form_exists -%}
   {%- form 'product', product, id: product_form_id, hidden: true -%}
   <input type="hidden" disabled name="id" value="{{ product.selected_or_first_available_variant.id }}">
   {%- endform -%}
   {%- endunless -%}
</safe-sticky>
<style>
  .container-buy-quant {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 16px;
  }
  .container-buy-quant {
    margin-bottom: 12px;
  }
  div.container-buy-quant > div.product-info__buy-buttons {
    width: 100%;
  }
  .quantity-selector > input {
    width: 32px;
  }
  @media (max-width: 999px){
    .quantity-selector > input {
      width: 24px;
    }
  }
  
  .payment-icons svg {
    width: 45px;
    height: auto;
  }
  .size-chart-container {
    display: flex;
    gap: 5px;
  }
  .size-chart-link {
    display: flex;
    align-items: center;
    gap: 5px;
    text-decoration: underline;
    font-size: 14px;
  }
</style>
<style>
@keyframes anima1 {
    0% { transform: scale(1); }
    100% { transform: scale(1.03); }
}
.animate_btn_buy {
    animation-name: anima1;
    animation-duration: 0.7s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}
</style>

<style>
   @font-face {
   font-family: 'FontePIX';
   src: url('{{ "FontePIX.OTF" | asset_url }}') format('opentype');
   font-weight: normal;
   font-style: normal;
   }
   @font-face {
   font-family: 'FontePIX';
   src: url('{{ "FontePIX-BOLD.OTF" | asset_url }}') format('opentype');
   font-weight: bold;
   font-style: normal;
   }
   .div_main {
   display: flex;
   align-items: center; 
   justify-content: space-between;
   width: 100%;
   }
   .price {
   font-size: 32px;
   font-weight: bold;
   color: #e53935;
   margin-right: 10px; 
   }
   .discount-badge {
   display: flex;
   align-items: center;
   background-color: {{ section.settings.pix_color_bg }};
   padding: 10px;
   border-radius: 10px 0 0 10px; 
   width: fit-content;
   font-family: 'FontePIX', Arial, sans-serif;
   color: {{ section.settings.pix_color_ft }};
   }
   .icon_pix {
   width: 30px;
   height: 30px;
   margin-right: 10px;
   }
   .discount-text {
   display: flex;
   flex-direction: column;
   }
   .discount-text span {
   line-height: 1;
   }
   .discount-percent {
   font-size: 35px;
   font-weight: bold;
   }
   .discount-off-pix {
   display: flex;
   flex-direction: column;
   padding-left: 4px;
   }
   .discount-off {
   font-size: 16px;
   font-weight: bold;
   }
   .discount-pix {
   font-size: 16px;
   margin-top: -1px;
   }
   .discount-economy {
   font-size: 14px;
   }
   .more_payments_bar {
   font-size: 16px; 
   }
@media (max-width: 480px) {
   .price {
   font-size: 20px;
   }
   .discount-badge {
   padding: 6px;
   }
   .icon_pix {
   width: 20px;
   height: 20px;
   }
   .discount-percent {
   font-size: 24px;
   }
   .discount-off {
   font-size: 12px;
   }
   .discount-pix {
   font-size: 12px;
   }
   .discount-economy {
   font-size: 10px;
   }
   .more_payments_bar {
   font-size: 14px; 
   }
   }
</style>
