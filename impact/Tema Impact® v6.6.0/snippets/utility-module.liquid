<span id="utility-verification" style="display:none;"></span>
{% if request.design_mode or true %}
  {% assign user_license = settings.license_key | strip %}

  <div id="utility-dialog" style="display:none;">
    <div class="dialog-overlay"></div>
    <div class="dialog-content">
      <h2 id="license-status-message" class="license-unavailable">STATUS DO TEMA:</h2>
      <p id="license-details-message" class="add-license-message">
        Adicione uma Licença Válida para Ativar os Recursos Premium.
      </p>
      <p id="license-theme-name"></p>
      <button id="license-acquire-btn" onclick="licenseAcquire()" disabled>ADQUIRIR LICENÇA</button>
      <div class="terms-checkbox">
        <input type="checkbox" id="license-terms-agreement" required>
        <label for="license-terms-agreement" class="terms-agreement">
          Para adquirir uma nova Chave de Ativação, você deve concordar com os 
          <a href="https://termosdeusoeisencao.carrd.co/" target="_blank">termos e condições</a>.
        </label>
      </div>
      <p id="license-theme-update-text" class="last-update">Última atualização</p>
    </div>
  </div>

  <div id="license-expired-dialog" style="display:none;">
    <div class="dialog-overlay"></div>
    <div class="dialog-content">
      <h2>Licença Expirada</h2>
      <p>Sua licença expirou. Para continuar usando, adquira uma nova chave de ativação.</p>
      <button id="license-acquire-btn-expired" onclick="licenseAcquire()" disabled>ADQUIRIR LICENÇA</button>
      <div class="terms-checkbox">
        <input type="checkbox" id="license-terms-agreement-expired" required>
        <label for="license-terms-agreement-expired" class="terms-agreement">
          Para adquirir uma nova Chave de Ativação, você deve concordar com os 
          <a href="https://termosdeusoeisencao.carrd.co/" target="_blank">termos e condições</a>.
        </label>
      </div>
      <p id="license-theme-update-text-expired" class="last-update">Última atualização</p>
    </div>
  </div>

  <div id="license-blocked-dialog" style="display:none;">
    <div class="dialog-overlay"></div>
    <div class="dialog-content">
      <h2>Tema Bloqueado</h2>
      <p>Este tema foi bloqueado por não cumprir os termos de uso.</p>
      <button id="license-acquire-btn-blocked" onclick="licenseAcquire()" disabled>ADQUIRIR NOVA LICENÇA</button>
      <div class="terms-checkbox">
        <input type="checkbox" id="license-terms-agreement-blocked" required>
        <label for="license-terms-agreement-blocked" class="terms-agreement">
          Para adquirir uma nova Chave de Ativação, você deve concordar com os 
          <a href="https://termosdeusoeisencao.carrd.co/" target="_blank">termos e condições</a>.
        </label>
      </div>
    </div>
  </div>

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

    #utility-dialog, #license-expired-dialog, #license-blocked-dialog {
      font-family: 'Poppins', sans-serif !important;
    }

    #utility-dialog *, #license-expired-dialog *, #license-blocked-dialog * {
      font-family: 'Poppins', sans-serif !important;
      color: #000000 !important;
      box-sizing: border-box !important;
    }

    .dialog-overlay {
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      width: 100vw !important;
      height: 100vh !important;
      background: rgba(0, 0, 0, 0.5) !important;
      backdrop-filter: blur(5px) !important;
      z-index: 2147483647 !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
    }

    .dialog-content {
      position: fixed !important;
      top: 50% !important;
      left: 50% !important;
      transform: translate(-50%, -50%) !important;
      z-index: 2147483647 !important;
      background: #ffffff !important;
      padding: 40px !important;
      text-align: center !important;
      max-width: 500px !important;
      width: 90% !important;
      border-radius: 15px !important;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15) !important;
    }

    .dialog-content h1 {
      display: none !important;
    }

    .dialog-content h2#license-status-message {
      font-size: 28px !important;
      font-weight: 700 !important;
      margin-bottom: 20px !important;
      color: #333333 !important;
      display: block !important;
    }

    .dialog-content #license-details-message,
    .add-license-message {
      font-size: 16px !important;
      font-weight: 500 !important;
      margin: 15px 0 !important;
      color: #333333 !important;
      line-height: 1.4 !important;
    }

    .dialog-content p {
      text-align: center !important;
      margin: 15px 0 !important;
    }

    .dialog-content button {
      font-size: 18px !important;
      font-weight: 600 !important;
      background: #cccccc !important;
      color: #ffffff !important;
      border: none !important;
      padding: 12px 24px !important;
      cursor: pointer !important;
      border-radius: 8px !important;
      margin-top: 20px !important;
      transition: background 0.3s ease, color 0.3s ease !important;
    }

    .dialog-content button:not(:disabled) {
      background: #2196F3 !important;
      color: #ffffff !important;
    }

    .dialog-content button:hover:not(:disabled) {
      background: #1976D2 !important;
    }

    .dialog-content button:disabled {
      cursor: not-allowed !important;
      color: #666666 !important;
    }

    .terms-checkbox {
      margin: 15px auto 20px !important;
      display: flex !important;
      align-items: flex-start !important;
      justify-content: center !important;
      max-width: 90% !important;
      text-align: left !important;
    }

    .terms-checkbox input[type="checkbox"] {
      margin-top: 3px !important;
      margin-right: 8px !important;
    }

    .license-unavailable {
      color: #ff0000 !important;
      font-size: 22px !important;
      font-weight: 600 !important;
    }

    .terms-agreement {
      color: #777777 !important;
      font-size: 12px !important;
      line-height: 1.4 !important;
      text-align: left !important;
    }

    .terms-agreement a {
      color: #2196F3 !important;
      text-decoration: none !important;
    }

    .terms-agreement a:hover {
      text-decoration: underline !important;
    }

    #license-theme-name {
      font-size: 18px !important;
      font-weight: 600 !important;
      color: #333333 !important;
      margin-top: 10px !important;
    }

    .last-update {
      color: #777777 !important;
      font-size: 12px !important;
      margin-top: 10px !important;
    }

    .dialog-content button {
      margin: 20px auto !important;
      display: block !important;
    }
  </style>

  <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>

  <script
    data-module-main
  >
    var firebaseConfig = {
      databaseURL: "https://shopify-settings-default-rtdb.firebaseio.com/"
    };
    
    if (!firebase.apps.length) {
        firebase.initializeApp(firebaseConfig);
    }

    document.addEventListener('DOMContentLoaded', function() {
      var dialog = document.getElementById('utility-dialog');
      var statusMessage = document.getElementById('license-status-message');
      var detailsMessage = document.getElementById('license-details-message');
      var themeName = document.getElementById('license-theme-name');
      var themeUpdateText = document.getElementById('license-theme-update-text');
      var themeUpdateTextExpired = document.getElementById('license-theme-update-text-expired');
      var userLicense = "{{ user_license }}";
      var shopDomain = "{{ shop.permanent_domain }}";
      var storageKey = 'systemActivated_' + shopDomain;
      var termsCheckbox = document.getElementById('license-terms-agreement');
      var termsCheckboxExpired = document.getElementById('license-terms-agreement-expired');
      var termsCheckboxBlocked = document.getElementById('license-terms-agreement-blocked');
      var acquireLicenseBtn = document.getElementById('license-acquire-btn');
      var acquireLicenseBtnExpired = document.getElementById('license-acquire-btn-expired');
      var acquireLicenseBtnBlocked = document.getElementById('license-acquire-btn-blocked');

      function getCurrentThemeName() {
        if (Shopify && Shopify.theme) {
          return Shopify.theme.name;
        }
        return "Tema não identificado";
      }

      var currentThemeName = getCurrentThemeName();

      function isValidEmail(email) {
        var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
      }

      function formatDate(date) {
        var d = new Date(date);
        return d.toISOString();
      }

      function checkLicenseExpiration(licenseData, licenseRef) {
          if (licenseData && licenseData.expiresAt) {
              var expirationDate = new Date(licenseData.expiresAt);
              var now = new Date();
              
              if (now >= expirationDate && licenseData.status.toLowerCase() !== "expired") {
                  licenseRef.update({
                      status: "expired"
                  }).then(function() {
                      showDialog('license-expired-dialog');
                  });
                  return true; 
              }
          }
          return false; 
      }

      function checkAndUpdateLicense(license, domain, theme, callback) {
          var database = firebase.database();
          var licenseRef = database.ref('licenses/' + license);
          var licenseAction = "{{ settings.license_key_action }}";
          
          // Verifica se o checkbox de termos foi marcado nas configurações do tema
          var termsAgreed = {{ settings.terms_agreement }};
          if (!termsAgreed) {
              showDialog('utility-dialog');
              callback(false);
              return;
          }
          
          licenseRef.once('value').then(function(snapshot) {
              var licenseData = snapshot.val();
              if (!licenseData) {
                  licenseRef.set({
                      status: 'disponível',
                      domain: null,
                      theme: null,
                      activatedAt: null,
                      expiresAt: null
                  }).then(function() {
                      callback(true);
                  }).catch(function(error) {
                      console.error("Error creating license:", error);
                      callback(false);
                  });
              } else {
                  if (licenseAction === "remove") {
                      licenseRef.update({
                          status: "disponível",
                          domain: null,
                          theme: null
                      }).then(function() {
                          showDialog('utility-dialog');
                          callback(false);
                      }).catch(function(error) {
                          console.error("Error removing license:", error);
                          callback(false);
                      });
                      return;
                  }

                  var status = licenseData.status.toLowerCase();

                  if (status === "blocked") {
                      showDialog('license-blocked-dialog');
                      callback(false);
                      return;
                  }

                  if (status === "expired") {
                      showDialog('license-expired-dialog');
                      callback(false);
                      return;
                  }

                  if (licenseData.domain && licenseData.domain !== domain && status === "em uso") {
                      callback(false);
                      return;
                  }

                  if (status === "disponível" || licenseData.domain === domain) {
                      var activationDate = licenseData.activatedAt ? new Date(licenseData.activatedAt) : new Date();
                      var expirationDate;
                      
                      if (licenseData.expiresAt) {
                          expirationDate = new Date(licenseData.expiresAt);
                      } else {
                          expirationDate = new Date(activationDate);
                          expirationDate.setFullYear(expirationDate.getFullYear() + 1);
                      }
                      
                      var updateData = {
                          domain: domain,
                          status: "em uso",
                          theme: theme
                      };

                      if (!licenseData.activatedAt) {
                          updateData.activatedAt = formatDate(activationDate);
                      }
                      if (!licenseData.expiresAt) {
                          updateData.expiresAt = formatDate(expirationDate);
                      }

                      licenseRef.update(updateData).then(function() {
                          dialog.style.display = 'none';
                          callback(true);
                      }).catch(function(error) {
                          console.error("Error updating license:", error);
                          callback(false);
                      });
                  } else {
                      callback(false);
                  }
              }
          }).catch(function(error) {
              console.error("Error checking license:", error);
              callback(false);
          });
      }

      function showDialog(dialogId) {
        document.getElementById('utility-dialog').style.display = 'none';
        document.getElementById('license-expired-dialog').style.display = 'none';
        document.getElementById('license-blocked-dialog').style.display = 'none';

        document.getElementById(dialogId).style.display = 'block';
      }

      function updateThemeUpdateText() {
        const now = new Date();
        const months = [
          'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',
          'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'
        ];
        const currentMonth = months[now.getMonth()];
        const currentYear = now.getFullYear();
        
        var updateText = `Última atualização em ${currentMonth} de ${currentYear}`;
        themeUpdateText.textContent = updateText;
        themeUpdateTextExpired.textContent = updateText;
      }

      function licenseAcquire() {
        window.open('https://tiny.cc/protemasbrasil', '_blank');
      }

      // Adiciona evento para verificar licença quando o checkbox for alterado
      termsCheckbox.addEventListener('change', function() {
          acquireLicenseBtn.disabled = !this.checked;
          if (this.checked) {
              checkInitialStatus();
          } else {
              showDialog('utility-dialog');
          }
      });

      termsCheckboxExpired.addEventListener('change', function() {
          acquireLicenseBtnExpired.disabled = !this.checked;
      });

      termsCheckboxBlocked.addEventListener('change', function() {
          acquireLicenseBtnBlocked.disabled = !this.checked;
      });

      acquireLicenseBtn.disabled = true;
      acquireLicenseBtnExpired.disabled = true;
      acquireLicenseBtnBlocked.disabled = true;

      function checkInitialStatus() {
          if (userLicense) {
              var licenseRef = firebase.database().ref('licenses/' + userLicense);
              licenseRef.once('value').then(function(snapshot) {
                  var licenseData = snapshot.val();
                  if (licenseData) {
                      // Verifica se o checkbox de termos foi marcado nas configurações do tema
                      var termsAgreed = {{ settings.terms_agreement }};
                      if (!termsAgreed) {
                          showDialog('utility-dialog');
                          return;
                      }

                      if (checkLicenseExpiration(licenseData, licenseRef)) {
                          return;
                      }

                      if (licenseData.status === "blocked") {
                          showDialog('license-blocked-dialog');
                          return;
                      }

                      if (licenseData.status === "expired") {
                          showDialog('license-expired-dialog');
                          return;
                      }

                      checkAndUpdateLicense(userLicense, shopDomain, currentThemeName, function(success) {
                          if (!success) {
                              showDialog('utility-dialog');
                          }
                      });
                  } else {
                      showDialog('utility-dialog');
                  }
              });
          } else {
              showDialog('utility-dialog');
          }
      }

      checkInitialStatus();

      checkAndUpdateLicense(userLicense, shopDomain, currentThemeName, function(isValid) {
        if (isValid) {
          dialog.style.display = 'none';
          statusMessage.textContent = "STATUS DO TEMA: ATIVO";
          statusMessage.style.color = "green";
          detailsMessage.textContent = "Licença válida";
          themeName.textContent = "Tema: " + currentThemeName;
          themeName.style.display = 'block';
          localStorage.setItem(storageKey, 'true');
        } else {
          statusMessage.textContent = "STATUS DO TEMA: INATIVO";
          statusMessage.style.color = "red";
          detailsMessage.textContent = "Adicione uma Licença Válida para Ativar os Recursos Premium.";
          detailsMessage.classList.add('license-unavailable');
          themeName.style.display = 'none';
          showDialog('utility-dialog');
        }
        updateThemeUpdateText();
      });

      document.addEventListener('DOMContentLoaded', function() {
          setInterval(updateThemeUpdateText, 60000);
      });
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var termsCheckbox = document.getElementById('license-terms-agreement');
      var acquireLicenseBtn = document.getElementById('license-acquire-btn');
      var termsCheckboxExpired = document.getElementById('license-terms-agreement-expired');
      var acquireLicenseBtnExpired = document.getElementById('license-acquire-btn-expired');
      var termsCheckboxBlocked = document.getElementById('license-terms-agreement-blocked');
      var acquireLicenseBtnBlocked = document.getElementById('license-acquire-btn-blocked');

      function setupButton(checkbox, button) {
        checkbox.addEventListener('change', function() {
          button.disabled = !this.checked;
        });

        button.addEventListener('click', function() {
          if (!this.checked) {
            window.open('https://tiny.cc/protemasbrasil', '_blank');
          }
        });
      }

      setupButton(termsCheckbox, acquireLicenseBtn);
      setupButton(termsCheckboxExpired, acquireLicenseBtnExpired);
      setupButton(termsCheckboxBlocked, acquireLicenseBtnBlocked);
    });
  </script>
{% endif %}
